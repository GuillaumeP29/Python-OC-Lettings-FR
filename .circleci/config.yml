version: 2.1

orbs:
  python: circleci/python@2.0.3
  docker: circleci/docker@2.1.1
  heroku: circleci/heroku@1.2.6

jobs:
  build-and-test:
    executor: python/default
    docker:
      - image: cimg/python:3.9.7
    steps:
      - checkout
      - python/install-packages:
          pip-dependency-file: requirements.txt
          pkg-manager: pip
      - setup_remote_docker:
          docker_layer_caching: true  
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run tests
          command: pytest
          env:
            DJANGO_SECRET_KEY: $DJANGO_SECRET_KEY
      - run:
          name: Flake8 report
          command: flake8 --config='./setup.cfg'
  deploy-to-heroku:
    environment:
      IMAGE_NAME: oc_p13:$CIRCLE_SHA1 .
    docker:
      - image: cimg/python:3.10.4
    steps:
      - setup_remote_docker
      - checkout
      - heroku/install

      - run:
          command: sudo curl https://cli-assets.heroku.com/install.sh | sh

      - run:
          command: HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:login

      - run:
          command: HEROKU_API_KEY=${HEROKU_TOKEN} heroku
            create $HEROKU_APP_NAME || true

      - run:
          command: HEROKU_API_KEY=${HEROKU_TOKEN} heroku
            container:push -a $HEROKU_APP_NAME web

      # - run:
      #     command: HEROKU_API_KEY=${HEROKU_TOKEN} heroku
      #       config:set SECRET_KEY=$SECRET_KEY -a $HEROKU_APP_NAME

      # - run:
      #     command: HEROKU_API_KEY=${HEROKU_TOKEN}
      #       heroku config:set SENTRY_DSN=$SENTRY_DSN -a $HEROKU_APP_NAME

      - run:
          command: HEROKU_API_KEY=${HEROKU_TOKEN} heroku
            container:release -a $HEROKU_APP_NAME web

workflows:
  master:
    jobs:
      - build-and-test:
          filters:
            branches:
              only:
                - master
      - docker/publish:
          name: containerize
          image: $DOCKER_LOGIN/$PROJECT_REPONAME  # guillaumep29/oc_lettings_site
          tag: $CIRCLE_SHA1
          requires: 
            - build-and-test
      - deploy-to-heroku:
          requires:
            - containerize
  dev:
    jobs:
      - build-and-test:
          filters:
            branches:
              ignore:
                - master
